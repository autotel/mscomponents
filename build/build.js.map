{"version":3,"sources":["../../node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/onhandlers/on.js","src/Button.js","src/Clock.js","src/Sequencer.js","src/Slider.js","src/componentBase.js","src/index.js","src/mouse.js","src/syncman.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\r\nyou make the onHandlers.call(this) in the object that needs to have handlers.\r\nthen you can create a function callback for that object using object.on(\"handlerName.optionalName\",callbackFunction(){});\r\nthe object can run the handle callbacks by using this.handle(\"handlerName\",parametersToFeed);\r\n*/\r\nmodule.exports=function() {\r\n  var eventVerbose=false;\r\n  if (!this.ons) {\r\n    this.ons = [];\r\n  }\r\n  this.on = function(name, callback) {\r\n    var name = name.split(\".\");\r\n    if (typeof callback === 'function') {\r\n      if (name.length == 0) {\r\n        throw (\"sorry, you gave an invalid event name\");\r\n      } else if (name.length > 0) {\r\n        if (!this.ons[name[0]]) this.ons[name[0]] = [];\r\n        this.ons[name[0]].push([false, callback]);\r\n      }\r\n      // console.log(this.ons);\r\n    } else {\r\n      throw (\"error at mouse.on, provided callback that is not a function\");\r\n    }\r\n  }\r\n  this.off = function(name) {\r\n    var name = name.split(\".\");\r\n    if (name.length > 1) {\r\n      if (!this.ons[name[0]]) this.ons[name[0]] = [];\r\n      // console.log(\"prev\",this.ons[name[0]]);\r\n      this.ons[name[0]].splice(this.ons[name[0]].indexOf(name[1]), 1);\r\n      // console.log(\"then\",this.ons[name[0]]);\r\n    } else {\r\n      throw (\"sorry, you gave an invalid event name\" + name);\r\n    }\r\n  }\r\n  this.handle = function(fname, params) {\r\n    if(eventVerbose) console.log(\"Event \"+fname+\":\",{caller:this,params:params});\r\n    if (this.ons[fname]) {\r\n      for (var n in this.ons[fname]) {\r\n        // console.log(this.ons[fname][n][1]);\r\n        this.ons[fname][n][1](params);\r\n      }\r\n    }\r\n  }\r\n};","var componentBase=require('./componentBase');\r\nvar syncman,mouse;\r\nexports.enable=function(globals){\r\n  syncman=globals.syncman;\r\n  mouse=globals.mouse;\r\n  componentBase=componentBase.get({syncman:syncman,mouse:mouse});\r\n  return Button;\r\n}\r\nfunction Button(parent,options){\r\n  this.name=\"button\";\r\n  componentBase.call(this,parent,options);\r\n  //my reference number for data binding. With this number the socket binder knows who is the reciever of the data, and also with what name to send it\r\n  //pendant: this can potentially create a problem, because two objects can be created simultaneously at different ends at the same time.\r\n  //maybe instead of the simple push, there could be a callback, adn the object waits to receive it's socket id once its creation was propagated throughout all the network, or maybe there is an array for senting and other different for receiving... first option seems more sensible\r\n  this.data={value:0};\r\n  this.states=false;\r\n  this._bindN=syncman.bindList.push(this)-1;\r\n  //this.$jq=$('<div class=\"ms-button\"></div>');\r\n  this.label=options.label||\"☻\";\r\n  this.$jq.append(this.$faderjq);\r\n  this.$jq.html(this.label);\r\n  // if(options.css)\r\n  //   this.$jq.css(options.css);\r\n  // this.css=function(css){\r\n  //   this.$jq.css(options.css);\r\n  //   return this;\r\n  // }\r\n  //if a switch variable is passed, this button will switch on each click among the stated states\r\n  if(options.hasOwnProperty(\"switch\")){\r\n    this.states=[];\r\n    this.data.currentState=0;\r\n    this.states=options.switch;\r\n    this.switchState(0);\r\n  }\r\n  this.onClickCallback=function(){};\r\n  this.onReleaseCallback=function(){};\r\n  //pendant: this should be part of a base prototype, not repeated in each type\r\n  // if(typeof (parent.append||false)==\"function\"){\r\n  //   parent.append(this.$jq);\r\n  // }else if(typeof (parent.$jq.append||false)==\"function\"){\r\n  //   parent.$jq.append(this.$jq);\r\n  // }else{\r\n  //   console.log(\"a slider couldn't find dom element to attach himself\");\r\n  // }\r\n  var me=this;\r\n  // this.onChange=function(callback){\r\n  //   me.onClickCallback=function(){callback(me.data)};\r\n  //   return this;\r\n  // }\r\n\r\n  this.$jq.on(\"mousedown tap touchstart\",function(event){\r\n    me.onClickCallback(me.data);\r\n    event.preventDefault();\r\n    me.switchState();\r\n    me.addClass(\"active\");\r\n  });\r\n  this.$jq.on(\"mouseup mouseleave\",function(event){\r\n    me.onReleaseCallback(me.data);\r\n    event.preventDefault();\r\n    me.removeClass(\"active\");\r\n  });\r\n}\r\n\r\n\r\nButton.prototype.onClick=function(callback){\r\n  this.onClickCallback=callback;\r\n  return this;\r\n}\r\nButton.prototype.onRelease=function(callback){\r\n  this.onReleaseCallback=callback;\r\n  return this;\r\n}\r\nButton.prototype.switchState=function(to){\r\n  if(this.states){\r\n    //change state number to next\r\n    if(to){\r\n      this.data.currentState=to%this.states.length;\r\n    }else{\r\n      this.data.currentState=(this.data.currentState+1)%this.states.length;\r\n    }\r\n    //apply all the properties that the state carry. This makes the button super hackable\r\n    for(a in this.states[this.data.currentState]){\r\n      this[a]=this.states[this.data.currentState][a];\r\n      // console.log(\"[\"+a+\"]\",this[a]);\r\n    }\r\n  }\r\n  this.updateDom();\r\n}\r\n","\r\nvar syncman,mouse;\r\nvar OH=require(\"onhandlers\");\r\nexports.enable=function(globals){\r\n  syncman=globals.syncman;\r\n  mouse=globals.mouse;\r\n  return Clock;\r\n};\r\nfunction Clock(parent,options){\r\n  this.name=\"clock\";\r\n  OH.call(this);\r\n  var thisClock=this;\r\n  this.data={value:0};\r\n  this.states=false;\r\n  this._bindN=syncman.bindList.push(this)-1;\r\n  this.$jq=$('<div class=\"ms-clock ms-button\"></div>');\r\n  this.label=options.label||'∆';\r\n  this.$jq.append(this.$faderjq);\r\n  this.$jq.html(this.label);\r\n  if(options.css)\r\n    this.$jq.css(options.css);\r\n  this.css=function(css){\r\n    this.$jq.css(options.css);\r\n    return this;\r\n  }\r\n  //pendant: this should be part of a base prototype, not repeated in each type\r\n  if(typeof (parent.append||false)==\"function\"){\r\n    parent.append(this.$jq);\r\n  }else if(typeof (parent.$jq.append||false)==\"function\"){\r\n    parent.$jq.append(this.$jq);\r\n  }else{\r\n    console.log(\"a clock couldn't find dom element to attach himself\");\r\n  }\r\n  var me=this;\r\n  this.tick=function(){\r\n    thisClock.handle(\"tick\");\r\n    thisClock.addClass(\"tick\");\r\n    setTimeout(function(){thisClock.removeClass(\"tick\");},20);\r\n  }\r\n  setInterval(this.tick,options.interval|500);\r\n}\r\n\r\nClock.prototype.updateDom=function(){\r\n  this.$jq.html(this.label);\r\n}\r\n\r\n\r\n\r\n//aliasing of these two handy function\r\nClock.prototype.addClass=function(to){\r\n  this.$jq.addClass(to);\r\n}\r\nClock.prototype.removeClass=function(to){\r\n  this.$jq.removeClass(to);\r\n}","var componentBase=require('./componentBase');\r\nlet eemiter=require('onhandlers');\r\nvar syncman,mouse;\r\nexports.enable=function(globals){\r\n  syncman=globals.syncman;\r\n  mouse=globals.mouse;\r\n  componentBase=componentBase.get({syncman:syncman,mouse:mouse});\r\n  return Sequencer;\r\n}\r\n/**\r\n * A generator of sequencers\r\n *\r\n * @class Sequencer\r\n * @constructor new MsComponents.Sequencer(DOM/$jquery element,{properties})\r\n */\r\n //defines all the sequencer parameters by math,\r\n //maybe in a funture by styling table\r\nvar seqProg=4;\r\nfunction Sequencer(parent,options){\r\n var n=options.n||3;\r\n var thisSequencer=this;\r\n this.name=\"sequencer\"\r\n componentBase.call(this,parent,options);\r\n // this.$jq=$('<div class=\"sequencer\" id=\"seq_'+n+'\"><p style=\"position:absolute\"></p></div>');\r\n parent.append(this.$jq);\r\n this.alive=false;\r\n this._bindN=syncman.bindList.push(this)-1;\r\n this.pos=0;\r\n this.data=[];\r\n //set length or interval to options or default\r\n this.len=options.len|Math.pow(2,(seqProg%5)+1);\r\n this.evry=options.evry|Math.pow(2,(seqProg%4)+1);\r\n //must count an [every] amount of beats for each pos increment.\r\n this.subpos=0;\r\n this.$jq.css({width:16*Math.ceil(this.len/4)+\"px\"});\r\n //this.$jq.addClass(\"color_\"+seqProg%channels.length);\r\n this.disp=0;\r\n this.id=n;\r\n this.beatDisplace=0;\r\n var me=this;\r\n seqProg++;\r\n //this.channel=channels[this.id%channels.length];\r\n for(var bn=0; bn<this.len; bn++){\r\n   this.data[bn]=new SequencerButton(bn,this)\r\n }\r\n this.aliveChild=0;\r\n this.displace=0;\r\n this.setDisplace=function(to,emit){\r\n   if(emit==\"only\"){\r\n     emit=true;\r\n   }else{\r\n     this.subpos=((transportCurrentStep)%(this.len*this.evry))+to;\r\n   }\r\n   if(emit==true){\r\n     sockChange(\"seq:\"+me._bindN+\"\",\"dspl\",to);\r\n   }\r\n }\r\n this.step=function(){\r\n   var prevalive=this.alive;\r\n   this.alive=this.aliveChild>0;\r\n  //  console.log(this.aliveChild);\r\n   if(this.alive){\r\n    //  console.log(\"sete\");\r\n     //if the state of this.alive changes, we must emit the displacement, because it is new\r\n     if(!prevalive){\r\n       this.displace=(transportCurrentStep+this.subpos)%(this.len*this.evry);\r\n       console.log(\"ok. emit displae: \"+this.displace);\r\n       this.setDisplace(this.displace,\"only\");\r\n     };\r\n     //each sequencer has a different speed rates. while some plays one step per click, others will have one step per several clock ticks.\r\n     //the sequencer starting point is also displaced, and it depends on the time when it got alived+its position at that moment.\r\n     if(this.subpos%this.evry==0){\r\n       // console.log(\"sq\"+this.pos);\r\n       // data={sequencer:this.id,pos:this.pos,stepVal:this.data[this.pos].eval()};\r\n       // this.onStepTrigger(data);\r\n       // stepFunction(data);\r\n       this.pos=(this.subpos/this.evry)%(this.len);\r\n       if(this.data[this.pos].eval()==1){\r\n         // this.channel.engine.start(0,this.channel.startOffset,this.channel.endTime);\r\n         //so, this is called elsewhere aswelll.... the channel should have a trigger function\r\n        //  var loopStart=this.channel.startOffset;\r\n        //  var loopEnd=this.channel.endTime;\r\n        //  this.channel.sampler.triggerAttack(false,0,1,{start:loopStart,end:loopEnd});\r\n       }\r\n     }else{\r\n     }\r\n     //what is more economic??\r\n     // this.subpos=(this.subpos+1)%(this.len*this.evry);\r\n     //i guess that.. but it can grow eternally\r\n     this.subpos++;\r\n   }\r\n }\r\n this.setClock=function(clock,divisions){\r\n   if(divisions)\r\n   this.evry=divisions;\r\n   if(clock.on){\r\n     clock.on('tick',function(){thisSequencer.step()});\r\n     if(clock.name!=\"clock\")\r\n     console.warn(\"you set the clock of a sequencer to somehting that is not a clock, but a \"+clock.name);\r\n   }else{\r\n     console.warn(\"you tried to connect a \"+this.name+\" to an object that has no event hanlers \");\r\n   }\r\n }\r\n this.die=function(){\r\n   for(var bn in this.data){\r\n     this.data[bn].setData(0);\r\n   }\r\n   this.alive=false;\r\n   this.$jq.detach();\r\n }\r\n // this.onStepTrigger=function(data){\r\n //   // console.log(data);\r\n // }\r\n // this.$jq.on(\"mouseenter\",function(){\r\n //   focusChannel(me.channel.id);\r\n // });\r\n return this;\r\n}\r\n\r\nfunction SequencerButton(n,parent){\r\n  eemiter.call(this);\r\n  this.on(\"test\",function(){console.log(\"works!\")});\r\n  this.handle(\"test\");\r\n  this.$jq=$('<div class=\"seqbutton\"></div>');\r\n  this._bindN=syncman.bindList.push(this)-1;\r\n  parent.$jq.append(this.$jq);\r\n  this.data=0;\r\n  //pendant: evaluate wether the var n is still useful. remove it at every end.\r\n  this.n=n;\r\n  var me=this;\r\n  this.setData=function(to,emit){\r\n    // if(emit==true){\r\n    //   sockChange(\"seqb:\"+me._bindN+\"\",\"sV\",to);\r\n    // }\r\n    // console.log(\"sdata\");\r\n    //socket may set data to 0 when is already 0, generating displace of parent's alivedhild\r\n    if(to!=this.data){\r\n      if(to==1){\r\n        this.data=1;\r\n        this.$jq.addClass(\"on\");\r\n        parent.aliveChild++;\r\n      }\r\n      if(to==0){\r\n        this.data=0;\r\n        this.$jq.removeClass(\"on\");\r\n        parent.aliveChild--;\r\n      }\r\n    }\r\n    // console.log(parent.aliveChild);\r\n    // console.log(parent.aliveChild);\r\n  }\r\n  this.$jq.on(\"mousedown tap touchstart\",function(event){\r\n    event.preventDefault();\r\n    me.setData(Math.abs(me.data-1),true);\r\n    // me.data=;\r\n    if(me.data==1){\r\n       mouse.switching=true;\r\n    }else{\r\n    //   $(this).removeClass(\"on\");\r\n    //   parent.aliveChild--;\r\n       mouse.switching=false;\r\n     }\r\n  });\r\n  this.$jq.on(\"mouseenter touchenter\",function(){\r\n    if(mouse.buttonDown){\r\n      if(mouse.switching){\r\n        if(me.data==0){\r\n          me.setData(1,true);\r\n        }\r\n      }else{\r\n        if(me.data==1){\r\n          me.setData(0,true);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  this.eval=function(){\r\n    var $jq=this.$jq;\r\n    $jq.addClass(\"turn\");\r\n    window.setTimeout(function(){\r\n      $jq.removeClass(\"turn\");\r\n    },200);\r\n    return this.data;\r\n  }\r\n}\r\n","/*\r\nThis script create DOM sliders that can be used in web browser to control stuff. They can be synced through sockets and others by using callbacks.\r\n    Copyright (C) 2016 Joaquín Aldunate\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\nvar syncman,mouse;\r\n// var $;\r\nexports.enable=function(globals){\r\n  syncman=globals.syncman;\r\n  mouse=globals.mouse;\r\n  return Slider;\r\n};\r\n\r\n/**\r\n* This is the description for Slider class\r\n*\r\n* @class Slider\r\n* @constructor\r\n*/\r\nfunction Slider(parent,options){\r\n  //my reference number for data binding. With this number the socket binder knows who is the reciever of the data, and also with what name to send it\r\n  //pendant: this can potentially create a problem, because two objects can be created simultaneously at different ends at the same time.\r\n  //maybe instead of the simple push, there could be a callback, adn the object waits to receive it's socket id once its creation was propagated throughout all the network, or maybe there is an array for senting and other different for receiving... first option seems more sensible\r\n  this.data={value:0};\r\n\r\n  this._bindN=syncman.bindList.push(this)-1;\r\n  this.$jq=$('<div class=\"slider-container\" style=\"position:relative\"></div>');\r\n  this.$faderjq=$('<div class=\"slider-inner\" style=\"pointer-events:none; position:absolute\"></div>');\r\n  this.label=options.label||\"\";\r\n  this.labeljq=$('<p class=\"sliderlabel\"></p>');\r\n  this.$jq.append(this.$faderjq);\r\n  this.$jq.append(this.labeljq);\r\n  if(options.css)\r\n    this.$jq.css(options.css);\r\n  this.css=function(css){\r\n    this.$jq.css(css);\r\n    return this;\r\n  }\r\n  this.onChangeCallback=function(){};\r\n  //pendant: this should be part of a base prototype, not repeated in each type\r\n  if(typeof (parent.append||false)==\"function\"){\r\n    parent.append(this.$jq);\r\n  }else if(typeof (parent.$jq.append||false)==\"function\"){\r\n    parent.$jq.append(this.$jq);\r\n  }else{\r\n    console.log(\"a slider couldn't find dom element to attach himself\");\r\n  }\r\n  var me=this;\r\n  this.onChange=function(callback){\r\n    me.onChangeCallback=function(){callback(me.data)};\r\n    return this;\r\n  }\r\n  /**\r\n* My method description.  Like other pieces of your comment blocks,\r\n* this can span multiple lines.\r\n*\r\n* @method methodName\r\n* @param {String} foo Argument 1\r\n* @param {Object} config A config object\r\n* @param {String} config.name The name on the config object\r\n* @param {Function} config.callback A callback function on the config object\r\n* @param {Boolean} [extra=false] Do extra, optional work\r\n* @return {Boolean} Returns true on success\r\n*/\r\n  this.setData=function(to,emit){\r\n    if(emit===true){\r\n      //pendant: in sequencers we use parent.id, and here we use _bindN. Towards a controller API and a more sensical code, I think both should use the bind element array. read note in first line of this file.\r\n      //pendant: parent in seq is what me is here. this is pretty confusing var name decision\r\n      syncman.emit(\"slid:\"+me._bindN+\"\",\"sV\",to);\r\n    }\r\n    this.data.value=to;\r\n    this.onChangeCallback();\r\n    this.updateDom();\r\n  }\r\n  this.addClass=function(to){\r\n    this.$jq.addClass(to);\r\n  }\r\n  this.vertical=options.vertical||true;\r\n  this.addClass(\"vertical\");\r\n  this.$jq.on(\"mousedown tap touchstart\",function(event){\r\n    event.preventDefault();\r\n    if(me.vertical){\r\n      me.setData(1-event.offsetY/me.$jq.height(),true);//,true\r\n    }else{\r\n      me.setData(event.offsetX/me.$jq.width(),true);//,true\r\n    }\r\n  });\r\n\r\n  this.$jq.on(\"mousemove touchenter mouseleave mouseup\",function(event){\r\n    if(mouse.buttonDown){\r\n      event.preventDefault();\r\n      var emitThis=event.type==\"mouseleave\"||event.type==\"mouseup\"\r\n      if(me.vertical){\r\n        //the strange second paramenter in setdata was true, but it could clog the socket\r\n        me.setData(1-event.offsetY/me.$jq.height(),emitThis);//,true\r\n      }else{\r\n        me.setData(event.offsetX/me.$jq.width(),emitThis);//,true\r\n      }\r\n    }else{\r\n    }\r\n  });\r\n  this.eval=function(){\r\n    var jq=this.$jq;\r\n    jq.addClass(\"turn\");\r\n    window.setTimeout(function(){\r\n      jq.removeClass(\"turn\");\r\n    },200);\r\n    return this.data.value;\r\n  }\r\n  this.updateDom=function(){\r\n    if(this.vertical){\r\n      this.$faderjq.css({bottom:0,width:\"100%\",height:this.data.value*this.$jq.height()});\r\n    }else{\r\n      this.labeljq.html(this.label);\r\n      this.$faderjq.css({bottom:0,width:this.data.value*this.$jq.width(),height:\"100%\"});\r\n    }\r\n  }\r\n  this.setData(0);\r\n}","let eemiter=require('onhandlers');\r\nvar globals;\r\nvar mouse;\r\nexports.get=function(globals){\r\n  // syncman=globals.syncman;\r\n  mouse=globals.mouse;\r\n  return componentBase;\r\n}\r\n/**\r\n * The base of components.\r\n * It contains the function that are shared among all MsComponents. Makes little sense to use this alone\r\n *\r\n * @class componentBase\r\n * @constructor new MsComponents.componentBase(DOM/Jquery element,{properties})\r\n *\r\n * @property parent\r\n * @type Jquery / Dom element / componentBase\r\n * @property options\r\n * @type object\r\n */\r\nfunction componentBase(parent,options){\r\n  eemiter.call(this);\r\n  this.options=options;\r\n  var thisComponent=this;\r\n  if(!this.name){\r\n    this.name=\"component\";\r\n  }\r\n  this.$jq=$('<div class=\"ms-'+this.name+'\"></div>');\r\n  if(options.css)\r\n    this.$jq.css(options.css);\r\n  this.css=function(css){\r\n    this.$jq.css(options.css);\r\n    return this;\r\n  }\r\n  if(typeof (parent.append||false)==\"function\"){\r\n    parent.append(this.$jq);\r\n  }else if(typeof (parent.$jq.append||false)==\"function\"){\r\n    parent.$jq.append(this.$jq);\r\n  }else{\r\n    console.log(\"a slider couldn't find dom element to attach himself\");\r\n  }\r\n  /**\r\n  * @property mouseActivationMode\r\n  * @type String\r\n  * dragAll: the buttons will activate through all the trajectory of the mouse while pressed\r\n  * oneByOne: one click=one button press\r\n  * dragLast: the mouse can be tragged and will activae and hover only the last button that it entered\r\n  * hover: the buttins are activated upon hover regardless of whether is clicked or not\r\n  */\r\n  if(!options.mouseActivationMode){\r\n    options.mouseActivationMode=\"dragAll\";\r\n  }\r\n\r\n  function mouseActivate(event){\r\n    thisComponent.handle(\"onMouseStart\");\r\n    event.preventDefault();\r\n    thisComponent.addClass(\"active\");\r\n  }\r\n  function mouseDeactivate(event){\r\n    thisComponent.handle(\"onMouseEnd\");\r\n    event.preventDefault();\r\n    thisComponent.removeClass(\"active\");\r\n  }\r\n\r\n  //to avoid if chains that are a pain to change\r\n  function aIsInB(a,b){\r\n    for (var c in b){\r\n      if(a==b[c]){console.log(\"true\");return true;}\r\n    }\r\n    return false;\r\n  };\r\n\r\n  this.$jq.on(\"mousedown tap touchstart\",function(event){\r\n    //check that upon the current event, a mouseActivate should be triggered.\r\n    if(aIsInB(options.mouseActivationMode,[\"dragAll\",\"oneByOne\",\"dragLast\"])){\r\n      mouseActivate(event);\r\n    }\r\n  });\r\n\r\n  this.$jq.on(\"mouseenter\",function(event){\r\n    if(mouse.buttonDown){\r\n      if(aIsInB(options.mouseActivationMode,[\"dragAll\",\"dragLast\"])){\r\n        mouseActivate(event);\r\n      }\r\n    }\r\n    if(options.mouseActivationMode==\"hover\"){\r\n      mouseActivate(event);\r\n    }\r\n  });\r\n  this.$jq.on(\"mouseup\",function(event){\r\n    if(aIsInB(options.mouseActivationMode,[\"dragAll\",\"oneByOne\",\"dragLast\"])){\r\n      mouseDeactivate(event);\r\n    }\r\n  });\r\n  this.$jq.on(\"mouseout\",function(event){\r\n    if(aIsInB(options.mouseActivationMode,[\"hover\",\"oneByOne\",\"dragLast\"])){\r\n      mouseDeactivate(event);\r\n    }\r\n  });\r\n\r\n\r\n  this.updateDom=function(){\r\n    thisComponent.$jq.html(this.label);\r\n  }\r\n  //aliasing of these two handy function\r\n  this.addClass=function(to){\r\n    thisComponent.$jq.addClass(to);\r\n  }\r\n  this.removeClass=function(to){\r\n    thisComponent.$jq.removeClass(to);\r\n  }\r\n}","// var syncman={};\r\nvar globals={};\r\nglobals.syncman=require('./syncman.js').enable();\r\nglobals.mouse=require('./mouse.js').enable();\r\nvar Slider=require('./Slider.js').enable(globals);\r\nvar Sequencer=require('./Sequencer.js').enable(globals);\r\nvar Button=require('./Button.js').enable(globals);\r\nvar Clock=require('./Clock.js').enable(globals);\r\nvar MsComponents={\r\n  Slider:Slider,\r\n  Sequencer:Sequencer,\r\n  Button:Button,\r\n  Clock:Clock,\r\n  create:function(what,options,where){\r\n    if(!where)\r\n      where=$(\"body\");\r\n    return new this[what](where,options);\r\n  },\r\n};\r\nwindow.MsComponents=MsComponents;\r\nconsole.log(MsComponents);","exports.enable=function(){\r\n\r\n  $(document).ready(function(){\r\n    $(document).on(\"mousedown touchstart touchmove\",function(event){\r\n      mouse.buttonDown=true;\r\n      // console.log(event);\r\n    });\r\n    $(document).on(\"mouseup touchend\",function(event){\r\n      mouse.buttonDown=false;\r\n    });\r\n    // document.ontouchmove = function(event){\r\n    //   event.preventDefault();\r\n    // }\r\n  });\r\n  \r\n  return mouse;\r\n}\r\nvar mouse={\r\n  tool:\"draw\"\r\n};\r\n\r\n\r\n","/*\r\nThis script contains a template for data-binding management if you want to do so. Otherwise, it will just placehold var names so there are no undefined vars.\r\n    Copyright (C) 2016 Joaquín Aldunate\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nexports.enable=function(){\r\n  return new Syncman();\r\n};\r\n\r\nfunction Syncman(){\r\n  //list of all the items that use data binding\r\n  this.bindList=[];\r\n  //how are you emitting changes? it depends on the server you use.\r\n  this.emit=function(){}\r\n}\r\n"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}