{"version":3,"sources":["../../node_modules/browserify/node_modules/browser-pack/_prelude.js","src/Button.js","src/Sequencer.js","src/Slider.js","src/index.js","src/mouse.js","src/syncman.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\r\nThis script create DOM sliders that can be used in web browser to control stuff. They can be synced through sockets and others by using callbacks.\r\n    Copyright (C) 2016 Joaquín Aldunate\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\nvar syncman,mouse;\r\nexports.enable=function(sman,m){\r\n  syncman=sman;\r\n  mouse=m;\r\n  return Button;\r\n};\r\nfunction Button(parent,options){\r\n  //my reference number for data binding. With this number the socket binder knows who is the reciever of the data, and also with what name to send it\r\n  //pendant: this can potentially create a problem, because two objects can be created simultaneously at different ends at the same time.\r\n  //maybe instead of the simple push, there could be a callback, adn the object waits to receive it's socket id once its creation was propagated throughout all the network, or maybe there is an array for senting and other different for receiving... first option seems more sensible\r\n  this.data={value:0};\r\n  this.states=false;\r\n  this._bindN=syncman.bindList.push(this)-1;\r\n  this.$jq=$('<div class=\"ms-button\"></div>');\r\n  this.label=options.label||\"☻\";\r\n  this.$jq.append(this.$faderjq);\r\n  this.$jq.html(this.label);\r\n  if(options.css)\r\n    this.$jq.css(options.css);\r\n  this.css=function(css){\r\n    this.$jq.css(options.css);\r\n    return this;\r\n  }\r\n  //if a switch variable is passed, this button will switch on each click among the stated states\r\n  if(options.hasOwnProperty(\"switch\")){\r\n    this.states=[];\r\n    this.data.currentState=0;\r\n    this.states=options.switch;\r\n    this.switchState(0);\r\n  }\r\n  this.onClickCallback=function(){};\r\n  this.onReleaseCallback=function(){};\r\n  //pendant: this should be part of a base prototype, not repeated in each type\r\n  if(typeof (parent.append||false)==\"function\"){\r\n    parent.append(this.$jq);\r\n  }else if(typeof (parent.$jq.append||false)==\"function\"){\r\n    parent.$jq.append(this.$jq);\r\n  }else{\r\n    console.log(\"a slider couldn't find dom element to attach himself\");\r\n  }\r\n  var me=this;\r\n  // this.onChange=function(callback){\r\n  //   me.onClickCallback=function(){callback(me.data)};\r\n  //   return this;\r\n  // }\r\n\r\n  this.$jq.on(\"mousedown tap touchstart\",function(event){\r\n    me.onClickCallback(me.data);\r\n    event.preventDefault();\r\n    me.switchState();\r\n    me.addClass(\"active\");\r\n  });\r\n  this.$jq.on(\"mouseup mouseleave\",function(event){\r\n    me.onReleaseCallback(me.data);\r\n    event.preventDefault();\r\n    me.removeClass(\"active\");\r\n  });\r\n}\r\n\r\nButton.prototype.updateDom=function(){\r\n  this.$jq.html(this.label);\r\n}\r\n\r\nButton.prototype.onClick=function(callback){\r\n  this.onClickCallback=callback;\r\n  return this;\r\n}\r\nButton.prototype.onRelease=function(callback){\r\n  this.onReleaseCallback=callback;\r\n  return this;\r\n}\r\nButton.prototype.switchState=function(to){\r\n  if(this.states){\r\n    //change state number to next\r\n    if(to){\r\n      this.data.currentState=to%this.states.length;\r\n    }else{\r\n      this.data.currentState=(this.data.currentState+1)%this.states.length;\r\n    }\r\n    //apply all the properties that the state carry. This makes the button super hackable\r\n    for(a in this.states[this.data.currentState]){\r\n      this[a]=this.states[this.data.currentState][a];\r\n      // console.log(\"[\"+a+\"]\",this[a]);\r\n    }\r\n  }\r\n  this.updateDom();\r\n}\r\n//aliasing of these two handy function\r\nButton.prototype.addClass=function(to){\r\n  this.$jq.addClass(to);\r\n}\r\nButton.prototype.removeClass=function(to){\r\n  this.$jq.removeClass(to);\r\n}","var syncman,mouse;\r\n// var $;\r\nexports.enable=function(sman,m){\r\n  syncman=sman;\r\n  mouse=m;\r\n  return Sequencer;\r\n};\r\n\r\nfunction SequencerButton(n,parent){\r\n  this.jq=$('<div class=\"seqbutton\"></div>');\r\n  this._bindN=syncman.bindList.push(this)-1;\r\n  parent.jq.append(this.jq);\r\n  this.data=0;\r\n  //pendant: evaluate wether the var n is still useful. remove it at every end.\r\n  this.n=n;\r\n  var me=this;\r\n  this.setData=function(to,emit){\r\n    if(emit==true){\r\n      sockChange(\"seqb:\"+me._bindN+\"\",\"sV\",to);\r\n    }\r\n    //socket may set data to 0 when is already 0, generating displace of parent's alivedhild\r\n    if(to!=this.data){\r\n      if(to==1){\r\n        this.data=1;\r\n        this.jq.addClass(\"on\");\r\n        parent.aliveChild++;\r\n      }\r\n      if(to==0){\r\n        this.data=0;\r\n        this.jq.removeClass(\"on\");\r\n        parent.aliveChild--;\r\n      }\r\n    }\r\n    // console.log(parent.aliveChild);\r\n  }\r\n  this.jq.on(\"mousedown tap touchstart\",function(event){\r\n    event.preventDefault();\r\n    me.setData(Math.abs(me.data-1),true);\r\n    // me.data=;\r\n    if(me.data==1){\r\n       mouse.switching=true;\r\n    }else{\r\n    //   $(this).removeClass(\"on\");\r\n    //   parent.aliveChild--;\r\n       mouse.switching=false;\r\n     }\r\n  });\r\n  this.jq.on(\"mouseenter touchenter\",function(){\r\n    if(mouse.buttonDown){\r\n      if(mouse.switching){\r\n        if(me.data==0){\r\n          me.setData(1,true);\r\n        }\r\n      }else{\r\n        if(me.data==1){\r\n          me.setData(0,true);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  this.eval=function(){\r\n    var jq=this.jq;\r\n    jq.addClass(\"turn\");\r\n    window.setTimeout(function(){\r\n      jq.removeClass(\"turn\");\r\n    },200);\r\n    return this.data;\r\n  }\r\n}\r\n//defines all the sequencer parameters by math,\r\n//maybe in a funture by styling table\r\nvar seqProg=0;\r\nfunction Sequencer(parent,options){\r\n  var n=options.n||3;\r\n  parent.append('<div class=\"sequencer\" id=\"seq_'+n+'\"><p style=\"position:absolute\"></p></div>');\r\n  this.alive=false;\r\n  this._bindN=syncman.bindList.push(this)-1;\r\n  this.jq=$('#seq_'+n);\r\n  this.pos=0;\r\n  this.data=[];\r\n  this.len=Math.pow(2,(seqProg%5)+1);\r\n  this.evry=Math.pow(2,(seqProg%4)+1);\r\n  //must count an [every] amount of beats for each pos increment.\r\n  this.subpos=0;\r\n  this.jq.css({width:16*Math.ceil(this.len/4)+\"px\"});\r\n  //this.jq.addClass(\"color_\"+seqProg%channels.length);\r\n  this.disp=0;\r\n  this.id=n;\r\n  this.beatDisplace=0;\r\n  var me=this;\r\n  seqProg++;\r\n  //this.channel=channels[this.id%channels.length];\r\n  for(var bn=0; bn<this.len; bn++){\r\n    this.data[bn]=new SequencerButton(bn,this)\r\n  }\r\n  this.aliveChild=0;\r\n  this.displace=0;\r\n  this.setDisplace=function(to,emit){\r\n    if(emit==\"only\"){\r\n      emit=true;\r\n    }else{\r\n      this.subpos=((transportCurrentStep)%(this.len*this.evry))+to;\r\n    }\r\n    if(emit==true){\r\n      sockChange(\"seq:\"+me._bindN+\"\",\"dspl\",to);\r\n    }\r\n  }\r\n  this.step=function(){\r\n    var prevalive=this.alive;\r\n    this.alive=this.aliveChild>0;\r\n    if(this.alive){\r\n      //if the state of this.alive changes, we must emit the displacement, because it is new\r\n      if(!prevalive){\r\n        this.displace=(transportCurrentStep+this.subpos)%(this.len*this.evry);\r\n        console.log(\"ok. emit displae: \"+this.displace);\r\n        this.setDisplace(this.displace,\"only\");\r\n      };\r\n      //each sequencer has a different speed rates. while some plays one step per click, others will have one step per several clock ticks.\r\n      //the sequencer starting point is also displaced, and it depends on the time when it got alived+its position at that moment.\r\n      if(this.subpos%this.evry==0){\r\n        // console.log(\"sq\"+this.pos);\r\n        // data={sequencer:this.id,pos:this.pos,stepVal:this.data[this.pos].eval()};\r\n        // this.onStepTrigger(data);\r\n        // stepFunction(data);\r\n        this.pos=(this.subpos/this.evry)%(this.len);\r\n        if(this.data[this.pos].eval()==1){\r\n          // this.channel.engine.start(0,this.channel.startOffset,this.channel.endTime);\r\n          //so, this is called elsewhere aswelll.... the channel should have a trigger function\r\n          var loopStart=this.channel.startOffset;\r\n          var loopEnd=this.channel.endTime;\r\n          this.channel.sampler.triggerAttack(false,0,1,{start:loopStart,end:loopEnd});\r\n        }\r\n      }else{\r\n      }\r\n      //what is more economic??\r\n      // this.subpos=(this.subpos+1)%(this.len*this.evry);\r\n      //i guess that.. but it can grow eternally\r\n      this.subpos++;\r\n    }\r\n  }\r\n  this.die=function(){\r\n    for(var bn in this.data){\r\n      this.data[bn].setData(0);\r\n    }\r\n    this.alive=false;\r\n    this.jq.detach();\r\n  }\r\n  // this.onStepTrigger=function(data){\r\n  //   // console.log(data);\r\n  // }\r\n  this.jq.on(\"mouseenter\",function(){\r\n    focusChannel(me.channel.id);\r\n  });\r\n}","/*\r\nThis script create DOM sliders that can be used in web browser to control stuff. They can be synced through sockets and others by using callbacks.\r\n    Copyright (C) 2016 Joaquín Aldunate\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\nvar syncman,mouse;\r\n// var $;\r\nexports.enable=function(sman,m){\r\n  syncman=sman;\r\n  mouse=m;\r\n  return Slider;\r\n};\r\nfunction Slider(parent,options){\r\n  //my reference number for data binding. With this number the socket binder knows who is the reciever of the data, and also with what name to send it\r\n  //pendant: this can potentially create a problem, because two objects can be created simultaneously at different ends at the same time.\r\n  //maybe instead of the simple push, there could be a callback, adn the object waits to receive it's socket id once its creation was propagated throughout all the network, or maybe there is an array for senting and other different for receiving... first option seems more sensible\r\n  this.data={value:0};\r\n\r\n  this._bindN=syncman.bindList.push(this)-1;\r\n  this.$jq=$('<div class=\"slider-container\" style=\"position:relative\"></div>');\r\n  this.$faderjq=$('<div class=\"slider-inner\" style=\"pointer-events:none; position:absolute\"></div>');\r\n  this.label=options.label||\"\";\r\n  this.labeljq=$('<p class=\"sliderlabel\"></p>');\r\n  this.$jq.append(this.$faderjq);\r\n  this.$jq.append(this.labeljq);\r\n  if(options.css)\r\n    this.$jq.css(options.css);\r\n  this.css=function(css){\r\n    this.$jq.css(css);\r\n    return this;\r\n  }\r\n  this.onChangeCallback=function(){};\r\n  //pendant: this should be part of a base prototype, not repeated in each type\r\n  if(typeof (parent.append||false)==\"function\"){\r\n    parent.append(this.$jq);\r\n  }else if(typeof (parent.$jq.append||false)==\"function\"){\r\n    parent.$jq.append(this.$jq);\r\n  }else{\r\n    console.log(\"a slider couldn't find dom element to attach himself\");\r\n  }\r\n  var me=this;\r\n  this.onChange=function(callback){\r\n    me.onChangeCallback=function(){callback(me.data)};\r\n    return this;\r\n  }\r\n\r\n  this.setData=function(to,emit){\r\n    if(emit===true){\r\n      //pendant: in sequencers we use parent.id, and here we use _bindN. Towards a controller API and a more sensical code, I think both should use the bind element array. read note in first line of this file.\r\n      //pendant: parent in seq is what me is here. this is pretty confusing var name decision\r\n      syncman.emit(\"slid:\"+me._bindN+\"\",\"sV\",to);\r\n    }\r\n    this.data.value=to;\r\n    this.onChangeCallback();\r\n    this.updateDom();\r\n  }\r\n  this.addClass=function(to){\r\n    this.$jq.addClass(to);\r\n  }\r\n  this.vertical=true;\r\n  this.addClass(\"vertical\");\r\n  this.$jq.on(\"mousedown tap touchstart\",function(event){\r\n    event.preventDefault();\r\n    if(me.vertical){\r\n      me.setData(1-event.offsetY/me.$jq.height(),true);//,true\r\n    }else{\r\n      me.setData(event.offsetX/me.$jq.width(),true);//,true\r\n    }\r\n  });\r\n\r\n  this.$jq.on(\"mousemove touchenter mouseleave mouseup\",function(event){\r\n    if(mouse.buttonDown){\r\n      event.preventDefault();\r\n      var emitThis=event.type==\"mouseleave\"||event.type==\"mouseup\"\r\n      if(me.vertical){\r\n        //the strange second paramenter in setdata was true, but it could clog the socket\r\n        me.setData(1-event.offsetY/me.$jq.height(),emitThis);//,true\r\n      }else{\r\n        me.setData(event.offsetX/me.$jq.width(),emitThis);//,true\r\n      }\r\n    }else{\r\n    }\r\n  });\r\n  this.eval=function(){\r\n    var jq=this.$jq;\r\n    jq.addClass(\"turn\");\r\n    window.setTimeout(function(){\r\n      jq.removeClass(\"turn\");\r\n    },200);\r\n    return this.data.value;\r\n  }\r\n  this.updateDom=function(){\r\n    if(this.vertical){\r\n      this.$faderjq.css({bottom:0,width:\"100%\",height:this.data.value*this.$jq.height()});\r\n    }else{\r\n      this.labeljq.html(this.label);\r\n      this.$faderjq.css({bottom:0,width:this.data.value*this.$jq.width(),height:\"100%\"});\r\n    }\r\n  }\r\n  this.setData(0);\r\n}","// var syncman={};\r\nvar syncman=require('./syncman.js').enable();\r\nvar mouse=require('./mouse.js').enable();\r\nvar Slider=require('./Slider.js').enable(syncman,mouse);\r\nvar Sequencer=require('./Sequencer.js').enable(syncman,mouse);\r\nvar Button=require('./Button.js').enable(syncman,mouse);\r\nvar MsComponents={\r\n  Slider:Slider,\r\n  Sequencer:Sequencer,\r\n  Button:Button\r\n};\r\nwindow.MsComponents=MsComponents;\r\nconsole.log(MsComponents);","exports.enable=function(){\r\n  return mouse;\r\n}\r\nvar mouse={\r\n  tool:\"draw\"\r\n};\r\n\r\n\r\n$(document).ready(function(){\r\n  $(document).on(\"mousedown touchstart touchmove\",function(event){\r\n    mouse.buttonDown=true;\r\n    // console.log(event);\r\n  });\r\n  $(document).on(\"mouseup touchend\",function(event){\r\n    mouse.buttonDown=false;\r\n  });\r\n  // document.ontouchmove = function(event){\r\n  //   event.preventDefault();\r\n  // }\r\n});","/*\r\nThis script contains a template for data-binding management if you want to do so. Otherwise, it will just placehold var names so there are no undefined vars.\r\n    Copyright (C) 2016 Joaquín Aldunate\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nexports.enable=function(){\r\n  return new Syncman();\r\n};\r\n\r\nfunction Syncman(){\r\n  //list of all the items that use data binding\r\n  this.bindList=[];\r\n  //how are you emitting changes? it depends on the server you use.\r\n  this.emit=function(){}\r\n}\r\n"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}